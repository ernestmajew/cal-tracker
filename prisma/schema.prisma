// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// npx prisma db push

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  username String
  password String
  meals    Meal[]
}

model Nutrition {
  id       Int       @id @default(autoincrement())
  calories Float?
  protein  Float?
  carbs    Float?
  fat      Float?
  sugar    Float?
  Product  Product[]
}

model Product {
  id            Int             @id @default(autoincrement())
  name          String
  nutrition     Nutrition       @relation(fields: [nutritionId], references: [id])
  nutritionId   Int
  ProductWeight ProductWeight[]
}

model Meal {
  id            Int             @id @default(autoincrement())
  name          String
  date          DateTime
  createdAt     DateTime        @default(now())
  products      ProductWeight[]
  totalCalories Float?
  totalProtein  Float?
  totalCarbs    Float?
  totalFat      Float?
  totalSugar    Float?
  user          User?           @relation(fields: [userId], references: [id])
  userId        Int?
}

model ProductWeight {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  weight    Float
  meal      Meal    @relation(fields: [mealId], references: [id])
  mealId    Int
  productId Int
}
